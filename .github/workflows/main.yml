name: 自动更新版本

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 检查代码
      uses: actions/checkout@v2

    - name: 检查版本文件
      id: check_version_file
      run: |
        if [ -f ./.github/version.json ]; then
          echo "版本文件已存在"
          echo "当前版本："
          cat ./.github/version.json
        else
          echo "版本文件不存在，创建版本文件..."
          cd ./.github
          echo "{\"version\": \"2.1.0\"}" > ./.github/version.json
          echo "已创建版本文件，当前版本："
          cat ./version.json
          cd ..
        fi
    - name: 确认用户账户
      run: |
        git config --global user.email "shanshui2024@github.com"
        git config --global user.name "Auto Update"
    - name: 确定版本号和新版本号
      id: determine_version
      run: |
        # 在此处编写Python脚本或使用其他方法来确定新版本号
        version=$(python ./.github/determine_version.py)
        echo "::set-output name=version::${version}"
    - name: 更新版本
      run: |
        echo "正在更新版本信息..."
        sed -i 's/"version": ".*"/"version": "${{ steps.determine_version.outputs.version }}"/' ./.github/version.json
    - name: 显示状态
      run: git status

    - name: 提交更改
      env:
        SSH_PRIVATE_KEY: ${{ secrets.UPDATE }}
      run: |
        mkdir -p ~/.ssh
        echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        git config --local core.sshCommand 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
        current_version=$(cat ./.github/version.json | jq -r .version)
        new_version=$(cat ./.github/version.json | jq -r .version)
        git add *
        git diff --cached --exit-code --quiet || (
          git commit -m "版本更新：-> ${new_version}"
          git push
        )
